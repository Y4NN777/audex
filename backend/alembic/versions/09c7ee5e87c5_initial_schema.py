"""Initial schema

Revision ID: 09c7ee5e87c5
Revises: 
Create Date: 2025-10-30 19:31:46.770835

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '09c7ee5e87c5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('batch_reports',
    sa.Column('batch_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('summary_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('findings', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('warnings', sa.JSON(), nullable=True),
    sa.Column('prompt_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('response_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['audit_batches.id'], ),
    sa.PrimaryKeyConstraint('batch_id')
    )
    op.create_table('risk_scores',
    sa.Column('batch_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('total_score', sa.Float(), nullable=False),
    sa.Column('normalized_score', sa.Float(), nullable=False),
    sa.Column('breakdown', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['audit_batches.id'], ),
    sa.PrimaryKeyConstraint('batch_id')
    )
    op.add_column('audit_batches', sa.Column('gemini_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('audit_batches', sa.Column('gemini_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('audit_batches', sa.Column('gemini_prompt_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('audit_batches', sa.Column('gemini_model', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('ocr_texts', sa.Column('confidence', sa.Float(), nullable=True))
    op.add_column('ocr_texts', sa.Column('warnings', sa.JSON(), nullable=True))
    op.add_column('ocr_texts', sa.Column('error', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('ocr_texts', 'error')
    op.drop_column('ocr_texts', 'warnings')
    op.drop_column('ocr_texts', 'confidence')
    op.drop_column('audit_batches', 'gemini_model')
    op.drop_column('audit_batches', 'gemini_prompt_hash')
    op.drop_column('audit_batches', 'gemini_summary')
    op.drop_column('audit_batches', 'gemini_status')
    op.drop_table('risk_scores')
    op.drop_table('batch_reports')
    # ### end Alembic commands ###
